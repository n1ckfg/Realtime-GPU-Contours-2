// Each #kernel tells which function to compile; you can have many kernels
#pragma use_dxc

#pragma kernel StampContourDebugAABB_Setup
#pragma kernel StampContourDebugAABB_Main

#include "../ShaderLibrary/ComputeKernelConfigs/StampContourDebugAABBComputeDefs.hlsl"


RWStructuredBuffer<uint> CBuffer_CachedArgs;
RWStructuredBuffer<uint> CBuffer_CachedArgs1;
// Debug -------------------------
RWTexture2D<float4> _DebugTexture1;
RWByteAddressBuffer CBuffer_BufferRawDebug;
// -------------------------------

ByteAddressBuffer CBuffer_BufferRawStampPixels;
RWByteAddressBuffer CBuffer_BufferRawPixelEdgeData;

// #define DEBUG_EDGELOOP_AREA_LENGTH



[numthreads(GROUP_SIZE_0, 1, 1)]
void StampContourDebugAABB_Setup(
	uint3 id : SV_DispatchThreadID,
	uint groupIdx : SV_GroupIndex,
	uint3 gIdx : SV_GroupID)
{
	const uint EdgeCount = CBuffer_CachedArgs_PixelEdgeCounter;
	uint numGroups = ComputeNumGroups(EdgeCount, GROUP_SIZE_0, BITS_GROUP_0);

	uint numCleaners = numGroups * GROUP_SIZE_0;

	InitializeLookBackTable_AABB(gIdx, numCleaners, numGroups);

}



[numthreads(GROUP_SIZE_0, 1, 1)]
void StampContourDebugAABB_Main(
	uint3 id : SV_DispatchThreadID,
	uint groupIdx : SV_GroupIndex,
	uint3 gIdx : SV_GroupID)
{
	const uint EdgeCount = CBuffer_CachedArgs_PixelEdgeCounter;
	uint numGroups = ComputeNumGroups(EdgeCount, GROUP_SIZE_0, BITS_GROUP_0);

	uint gIdx_dyn, id_dyn;
	RegisterAsDynamicBlock_AABB(groupIdx, gIdx_dyn, id_dyn);

#define EdgeId (id_dyn)
	bool validThread = EdgeId < EdgeCount;

	// Load Edge Attribs
	uint edgeAttribs = CBuffer_BufferRawPixelEdgeData.Load(
		CBuffer_PixelEdgeData_SerializedAttribs_AddrAt(0, EdgeId)
	);
	EdgeAttrib edgeAttribsMain = DecodeEdgeAttrib(edgeAttribs);
	uint stampCoordPacked = CBuffer_BufferRawStampPixels.Load(
		CBuffer_BufferRawStampPixels_AddrAt(edgeAttribsMain.stampInfo));
	uint2 stampCoord = DecodePixelCoord(stampCoordPacked);

	uint2 scanVal = PackPixelCoord(stampCoord).xx;
	bool stampOnCanvansEdge = any(
		((float2)stampCoord <= 1.1f) || 
		((_ScreenParams.xy - 1.5f) <= (float2)stampCoord)
	);
	if ((!validThread) || stampOnCanvansEdge)
	{
		scanVal = uint2(0xffffffff, 0);
	}

	uint2 scanSum_block = ScanBlock_AABB(scanVal, groupIdx, true);

	uint2 scanSum = ScanDevice_DecoupledLookBack_AABB(
		groupIdx, numGroups,
		scanVal, scanSum_block,
		true
	);

	if (validThread && (EdgeId == EdgeCount - 1))
	{
		uint2 aabb_min = DecodePixelCoord(scanSum.x);
		uint2 aabb_max = DecodePixelCoord(scanSum.y);

		uint addr = 0;
		CBuffer_BufferRawDebug.Store2(addr, aabb_min);
		addr += (2 << BITS_WORD_OFFSET);
		CBuffer_BufferRawDebug.Store2(addr, aabb_max);
		addr += (2 << BITS_WORD_OFFSET);

	}
}
#undef EdgeId

